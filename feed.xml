<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://dev.im-bot.com//feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="http://dev.im-bot.com//feed.xml" rel="self" type="application/atom+xml" /><link href="http://dev.im-bot.com//" rel="alternate" type="text/html" /><updated>2016-10-31T16:58:33+00:00</updated><id>http://dev.im-bot.com//</id><title type="html">botbotbot</title><subtitle>botbotbot's blog</subtitle><author><name>botbotbot</name></author><entry><title type="html">Git Submodule and Git Subtree</title><link href="http://dev.im-bot.com//git-submodule-subtree/" rel="alternate" type="text/html" title="Git Submodule and Git Subtree" /><published>2016-10-25T00:00:00+00:00</published><updated>2016-10-25T00:00:00+00:00</updated><id>http://dev.im-bot.com//git-submodule-subtree</id><content type="html" xml:base="http://dev.im-bot.com//git-submodule-subtree/">&lt;h1 id=&quot;git-submodule&quot;&gt;git submodule&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/gitaarik/8735255&quot;&gt;Git Submodules basic explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/blog/2104-working-with-submodules&quot;&gt;Working with submodules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/splitting-a-subfolder-out-into-a-new-repository/&quot;&gt;Splitting a subfolder out into a new repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.speirs.org/blog/2009/5/11/understanding-git-submodules.html&quot;&gt;Understanding Git Submodules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blogs.atlassian.com/2013/03/git-submodules-workflows-tips/&quot;&gt;Git Submodules: Core concept, workflows and tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jacius.info/git-submodule-cheat-sheet/&quot;&gt;Git Submodules Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.joncairns.com/2011/10/how-to-use-git-submodules/&quot;&gt;How to use Git submodules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@porteneuve/mastering-git-submodules-34c65e940407&quot;&gt;Mastering Git submodules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h3 id=&quot;should-avoid-git-submodules&quot;&gt;should avoid git submodules ?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-use-git-submodules/&quot;&gt;Why your company shouldn’t use Git submodules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://somethingsinistral.net/blog/git-submodules-are-probably-not-the-answer/&quot;&gt;Git submodules are probably not the answer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;git-subtree&quot;&gt;git subtree&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blogs.atlassian.com/2013/05/alternatives-to-git-submodule-git-subtree/&quot;&gt;Alternatives To Git Submodule: Git Subtree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.atlassian.com/blog/2015/05/the-power-of-git-subtree/&quot;&gt;The power of Git subtree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/kvnsmth/4688345&quot;&gt;A real world usage for git subtrees.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://alistra.ghost.io/2014/11/30/git-subtree-a-better-alternative-to-git-submodule/&quot;&gt;git subtree - a better alternative to git submodule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hpc.uni.lu/blog/2014/understanding-git-subtree/&quot;&gt;Understanding Git Subtree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@porteneuve/mastering-git-subtrees-943d29a798ec&quot;&gt;Mastering Git subtrees&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;recap&quot;&gt;recap&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://andrey.nering.com.br/2016/git-submodules-vs-subtrees/&quot;&gt;Git: submodules vs. subtrees&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>botbotbot</name></author><category term="git" /><summary type="html">git submodule


Git Submodules basic explanation
Working with submodules
Splitting a subfolder out into a new repository
Understanding Git Submodules
Git Submodules: Core concept, workflows and tips
Git Submodules Cheat Sheet
How to use Git submodules
Mastering Git submodules</summary></entry><entry><title type="html">API Documents</title><link href="http://dev.im-bot.com//api-docs/" rel="alternate" type="text/html" title="API Documents" /><published>2016-07-10T00:00:00+00:00</published><updated>2016-07-10T00:00:00+00:00</updated><id>http://dev.im-bot.com//api-docs</id><content type="html" xml:base="http://dev.im-bot.com//api-docs/">&lt;h1 id=&quot;api-blueprint&quot;&gt;API Blueprint&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://apiblueprint.org/&quot;&gt;API Blueprint. A powerful high-level API description language for web APIs.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://blog.lateral.io/2015/06/youll-never-guess-which-api-documentation-tools-we-use/&quot;&gt;You’ll never guess which API documentation tools we use&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/bpedro/api-code-generation&quot;&gt;API Code Generation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h3 id=&quot;tools&quot;&gt;Tools&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/danielgtaylor/aglio&quot;&gt;Agilo - An API Blueprint renderer with theme support that outputs static HTML&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/thecopy/apiary2postman&quot;&gt;apiary2postman&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/kminami/apib2swagger&quot;&gt;apib2swagger&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/apiaryio/dredd&quot;&gt;dredd - Language-agnostic HTTP API Testing Framework&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mson-api-blueprint-syntax&quot;&gt;MSON  - API Blueprint Syntax&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/apiaryio/mson&quot;&gt;MSON - Markdown Syntax for Object Notation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/apiaryio/api-blueprint/tree/master/examples&quot;&gt;api-blueprint/examples/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/danielgtaylor/aglio/master/example.apib&quot;&gt;aglio-example&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://gist.github.com/zdne/5f8295642af18aff27ec&quot;&gt;Working with multiple blueprint files&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/apiaryio/api-blueprint/issues/236&quot;&gt;Ability to reference repeated data &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/30082903/aglio-does-not-allow-parameters-in-the-body-to-be-defined-as-parameters&quot;&gt;Aglio does not allow parameters in the body to be defined as parameters&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/24207495/how-do-i-document-a-multipart-request-with-apiary&quot;&gt;How do I document a multipart request with apiary?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/apiaryio/dredd/issues/74&quot;&gt;Multipart form requests &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://gist.github.com/zdne/6267785&quot;&gt;zdne/mutlipart-example&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dreed&quot;&gt;Dreed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/apiaryio/dredd&quot;&gt;dredd - Language-agnostic HTTP API Testing Framework&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://philsturgeon.uk/api/2015/01/28/dredd-api-testing-documentation/&quot;&gt;Dredd: Do Your HTTP API Justice&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/apiaryio/dredd/issues/133&quot;&gt;dredd - Oauth&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://dredd.readthedocs.io/en/latest/hooks-nodejs/&quot;&gt;Writing Dredd Hooks In Node.js&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;swagger&quot;&gt;Swagger&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/swagger-api/swagger-node&quot;&gt;Swagger module for node.js&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/whitlockjc/building-apis-with-nodejs-and-swagger&quot;&gt;Building APIs with Node.js and Swagger&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=xggucT_xl5U&quot;&gt;Swagger: How to Create an API Documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://scotch.io/tutorials/speed-up-your-restful-api-development-in-node-js-with-swagger&quot;&gt;Speed up your RESTful API development in Node.js with Swagger&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://blog.risingstack.com/swagger-nodejs/&quot;&gt;Swagger for Node.js HTTP API Design&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/lucybot/api-spec-converter&quot;&gt;api-spec-converter - any thing to swagger&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://medium.com/@bird.praphan/%E0%B8%AD%E0%B8%A2%E0%B9%88%E0%B8%B2%E0%B9%80%E0%B8%9E%E0%B8%B4%E0%B9%88%E0%B8%87%E0%B8%AA%E0%B8%A3%E0%B9%89%E0%B8%B2%E0%B8%87-apis-%E0%B8%96%E0%B9%89%E0%B8%B2%E0%B8%A2%E0%B8%B1%E0%B8%87%E0%B9%84%E0%B8%A1%E0%B9%88%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B8%88%E0%B8%B1%E0%B8%81-swagger-f32514c7d729#.8muq43pvk&quot;&gt;อย่าเพิ่งสร้าง APIs ถ้ายังไม่รู้จัก Swagger&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>botbotbot</name></author><category term="API" /><summary type="html">API Blueprint


API Blueprint. A powerful high-level API description language for web APIs.
You’ll never guess which API documentation tools we use
API Code Generation</summary></entry><entry><title type="html">Mongo Search</title><link href="http://dev.im-bot.com//mongo-search/" rel="alternate" type="text/html" title="Mongo Search" /><published>2016-06-28T00:00:00+00:00</published><updated>2016-06-28T00:00:00+00:00</updated><id>http://dev.im-bot.com//mongo-search</id><content type="html" xml:base="http://dev.im-bot.com//mongo-search/">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://comsysto.com/blog-post/mongodb-full-text-search-vs-regular-expressions&quot;&gt;MONGODB FULL TEXT SEARCH VS. REGULAR EXPRESSIONS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/24343156/mongodb-prefix-wildcard-fulltext-search-text-find-part-with-search-string&quot;&gt;mongoDB prefix wildcard: fulltext-search ($text) find part with search-string&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;regex&quot;&gt;Regex&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;db.books.find({title: /สวัสดี/i}, {title: 1}).pretty()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://snipref.com/mongoose-js/mongoose-js-find-with-regex/&quot;&gt;Mongoose.js find with regex&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/query/regex/&quot;&gt;Mongo $regex&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/query/regex/#index-use&quot;&gt;Mongo $regex - Index Use&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;For case sensitive regular expression queries, if an index exists for the field, then MongoDB matches the regular expression against the values in the index, which can be faster than a collection scan.&lt;/p&gt;

&lt;p&gt;For case insensitive regular expression queries, these queries generally cannot use indexes effectively.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;fulltext-search&quot;&gt;Fulltext search&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;db.books.ensureIndex({title:&quot;text&quot;})
db.books.reIndex()
db.bokks.find({$text:{$search:&quot;time&quot;}})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://snipref.com/mongoose-js/mongoose-js-find-with-full-text-search/&quot;&gt;Mongoose.js Search With Full Text Search&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.tutorialspoint.com/mongodb/mongodb_text_search.htm&quot;&gt;MongoDB - Text Search&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.compose.io/articles/full-text-search-with-mongodb-and-node-js/&quot;&gt;Full Text Search with MongoDB &amp;amp; Node.js&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://code.tutsplus.com/tutorials/full-text-search-in-mongodb--cms-24835&quot;&gt;Full-Text Search in MongoDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/reference/operator/query/text/&quot;&gt;$text&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>botbotbot</name></author><category term="mongo" /><summary type="html">MONGODB FULL TEXT SEARCH VS. REGULAR EXPRESSIONS
mongoDB prefix wildcard: fulltext-search ($text) find part with search-string</summary></entry><entry><title type="html">RESTful API</title><link href="http://dev.im-bot.com//restful-api/" rel="alternate" type="text/html" title="RESTful API" /><published>2016-06-26T00:00:00+00:00</published><updated>2016-06-26T00:00:00+00:00</updated><id>http://dev.im-bot.com//restful-api</id><content type="html" xml:base="http://dev.im-bot.com//restful-api/">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/dwyl/learn-api-design&quot;&gt;Essential learning for people building APIs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://blog.newrelic.com/2014/09/08/apipunchlist/&quot;&gt;The 5 Things  API Must Have&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;1. Error handling
2. Error logging
3. Validation
4. Authentication and authorization
5. Testing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blogs.mulesoft.com/dev/api-best-practices-series-intro/&quot;&gt;New Series: API Design Best Practices&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.ploeh.dk/2013/04/29/rest-lessons-learned/&quot;&gt;REST lessons learned by Mark Seemann&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.restapitutorial.com/httpstatuscodes.html&quot;&gt;HTTP Status Codes&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://codeplanet.io/principles-good-restful-api-design/&quot;&gt;Principles of good RESTful API Design&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.restapitutorial.com&quot;&gt;Learn REST: A RESTful Tutorial&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/RestCheatSheet/api-cheat-sheet#api-design-cheat-sheet&quot;&gt;API Design Cheat Sheet&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.octo.com/en/design-a-rest-api/&quot;&gt;How to design a REST API&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.mwaysolutions.com/2014/06/05/10-best-practices-for-better-restful-api/&quot;&gt;10 Best Practices for Better RESTful API&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://restcookbook.com&quot;&gt;REST CookBook&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://codeplanet.io/principles-good-restful-api-design/&quot;&gt;Principles of good RESTful API Design&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/jaytaph/rest-in-practice-froscon-2012&quot;&gt;REST in practice - FrOSCon 2012&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api&quot;&gt;Best Practices for Designing a Pragmatic RESTful API&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rest-hypermedia-standard&quot;&gt;REST Hypermedia Standard&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sookocheff.com/post/api/on-choosing-a-hypermedia-format/&quot;&gt;On choosing a hypermedia type for your API - HAL, JSON-LD, Collection+JSON, SIREN, Oh My!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;And the winner is?
Unfortunately, there is no clear winner. It depends on the contraints in place on your API. However, I will offer some suggestions.
If you are augmenting existing API responses choose JSON-LD. If you are keeping it simple choose HAL. If you are looking for a full ?&amp;gt; featured media type choose Collection+JSON&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jsonapi.org&quot;&gt;JSON-API&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stateless.co/hal_specification.html&quot;&gt;HAL - Hypertext Application Language&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;video&quot;&gt;Video&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=heh4OeB9A-c&quot;&gt;How To Design A Good API and Why it Matters&lt;/a&gt; - &lt;a href=&quot;http://landawn.com/How%20to%20Design%20a%20Good%20API%20and%20Why%20it%20Matters.pdf&quot;&gt;slide&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=qCdpTji8nxo&quot;&gt;How to Design Great APIs - Parse Developer Day 2013&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>botbotbot</name></author><category term="API" /><summary type="html">Essential learning for people building APIs
The 5 Things  API Must Have
1. Error handling
2. Error logging
3. Validation
4. Authentication and authorization
5. Testing</summary></entry><entry><title type="html">12 Factor Apps</title><link href="http://dev.im-bot.com//12-factor-apps/" rel="alternate" type="text/html" title="12 Factor Apps" /><published>2016-06-16T00:00:00+00:00</published><updated>2016-06-16T00:00:00+00:00</updated><id>http://dev.im-bot.com//12-Factor-Apps</id><content type="html" xml:base="http://dev.im-bot.com//12-factor-apps/">&lt;blockquote&gt;
&lt;p&gt;The twelve-factor methodology can be applied to apps written in any programming language, and which use any combination of backing services (database, queue, memory cache, etc). - &lt;a href=&quot;http://12factor.net&quot;&gt;The twelve factor app&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;official-site&quot;&gt;Official Site&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://12factor.net&quot;&gt;The twelve factor app&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;article&quot;&gt;Article&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.clearlytech.com/2014/01/04/12-factor-apps-plain-english/&quot;&gt;12-Factor Apps in Plain English&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jaketrent.com/post/12-factor-app-summary/&quot;&gt;&amp;quot;12-Factor App&amp;quot; Summary&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.doismellburning.co.uk/twelve-factor-config-misunderstandings-and-advice/&quot;&gt;Twelve-Factor Config: Misunderstandings and Advice&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.doismellburning.co.uk/talks/django12factor/&quot;&gt;Py - The Twelve-Factor App&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.packtpub.com/books/content/how-to-build-12-factor-design-microservices-on-docker-part-1&quot;&gt;How to Build 12 Factor Microservices on Docker - Part 1&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.packtpub.com/books/content/how-to-build-12-factor-design-microservices-on-docker-part-2&quot;&gt;How to Build 12 Factor Microservices on Docker - Part 2&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;talks&quot;&gt;Talks&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=QOz1UOf6MdU&quot;&gt;CF &amp;amp; The 12-factor App 101: The Secret Decoder Ring for Operations&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>botbotbot</name></author><category term="article" /><category term="coding" /><summary type="html">The twelve-factor methodology can be applied to apps written in any programming language, and which use any combination of backing services (database, queue, memory cache, etc). - The twelve factor app  


Official Site


The twelve factor app</summary></entry><entry><title type="html">Git Bisect</title><link href="http://dev.im-bot.com//git-bisect/" rel="alternate" type="text/html" title="Git Bisect" /><published>2016-06-14T00:00:00+00:00</published><updated>2016-06-14T00:00:00+00:00</updated><id>http://dev.im-bot.com//git-bisect</id><content type="html" xml:base="http://dev.im-bot.com//git-bisect/">&lt;p&gt;Git Bisect is useful for debugging something is work in past but not now (Regression).&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;The better way to debug regression is find first commit that make error happen to reduce scope of the cause.
Instead of search each one by one commit that is linear search, you can apply binary search to help you find the commit that is cause of bug.
binay search will reduce the number of commits to  &lt;code&gt;log n + 1&lt;/code&gt; that is worst case of it.
&lt;code&gt;git bisect&lt;/code&gt; is the command that apply this concept you dont have to do it with your own.&lt;/p&gt;

&lt;h1 id=&quot;demo-amp-use-case-of-git-bisect&quot;&gt;Demo &amp;amp; Use case of Git Bisect&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ibotdotout/demo-git-bisect&quot;&gt;ibotdotout/demo-git-bisect&lt;/a&gt;&lt;/p&gt;</content><author><name>botbotbot</name></author><category term="article" /><category term="git" /><summary type="html">Git Bisect is useful for debugging something is work in past but not now (Regression).</summary></entry><entry><title type="html">All I know about mongo</title><link href="http://dev.im-bot.com//mongo/" rel="alternate" type="text/html" title="All I know about mongo" /><published>2016-03-29T00:00:00+00:00</published><updated>2016-03-29T00:00:00+00:00</updated><id>http://dev.im-bot.com//mongo</id><content type="html" xml:base="http://dev.im-bot.com//mongo/">&lt;h1 id=&quot;mongo&quot;&gt;Mongo&lt;/h1&gt;

&lt;h3 id=&quot;understand-documents&quot;&gt;Understand Documents&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mongodb.com/blog/post/thinking-documents-part-1&quot;&gt;Thinking in Documents: Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mongodb.com/blog/post/thinking-documents-part-2&quot;&gt;Thinking in Documents: Part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;migration&quot;&gt;Migration&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mongodb.com/post/40602082071/considerations-before-moving-from-rdbms-to-mongodb&quot;&gt;Considerations before moving from RDBMS to MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.mongodb.org/manual/reference/sql-comparison/&quot;&gt;SQL to MongoDB Mapping Chart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The first question to ask, then, when moving from a relational database to MongoDB is, ‘How will this data be accessed?’ Other important questions include:&lt;/p&gt;

&lt;p&gt;What is the access pattern?
What are you hoping to show to your customers/users?
How are you going to write this data?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.mongodb.org/manual/reference/sql-aggregation-comparison/&quot;&gt;SQL to Aggregation Mapping Chart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://s3.amazonaws.com/info-mongodb-com/RDBMStoMongoDBMigration.pdf&quot;&gt;RDBMS to MongoDB Migration Guide Considerations and Best Practices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;data-model&quot;&gt;Data Model&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.mongodb.org/manual/data-modeling/#data-models&quot;&gt;Data Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.mongodb.org/v3.0/tutorial/model-embedded-one-to-one-relationships-between-documents/&quot;&gt;Model One-to-One Relationships with Embedded Documents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.mongodb.org/v3.0/tutorial/model-embedded-one-to-many-relationships-between-documents/&quot;&gt;Model One-to-Many Relationships with Embedded Documents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.mongodb.org/v3.0/tutorial/model-referenced-one-to-many-relationships-between-documents/#model-one-to-many-relationships-with-document-references&quot;&gt;Model One-to-Many Relationships with Document References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tutorialspoint.com/mongodb/mongodb_relationships.htm&quot;&gt;MongoDB - Relationships&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;There is no such straightforward mapping in MongoDB but the relationships here are designed using embedded and linking documents.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;mongo-shard-key&quot;&gt;Mongo Shard Key&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://highscalability.com/blog/2014/3/5/10-things-you-should-know-about-running-mongodb-at-scale.html&quot;&gt;10 Things You Should Know About Running MongoDB At Scale&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;in real-life large deployments the biggest impact to performance is how well the schema design fits with the application needs. 
Second biggest impact is from lack of indexes or wrong indexes or way too many indexes&lt;/p&gt;

&lt;p&gt;Sharding too early may be a premature optimization. Not every MongoDB deployment requires sharding. &lt;/p&gt;

&lt;p&gt;When you have very poorly tuned schema, or incorrect indexes, sharding won&amp;#39;t solve your problem
Sharding is appropriate when a specific resource becomes a bottleneck on a single machine or replica set&lt;/p&gt;

&lt;p&gt;MongoDB&amp;#39;s big selling points are speed and simplicity&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/mongodb/everything-you-need-to-know-about-sharding?ref=https://www.mongodb.com/presentations/webinar-everything-you-need-know-about-sharding?jmp=docs&quot;&gt;Everything You Need to Know About Sharding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Good Shard Key&lt;br&gt;
- Cardinality&lt;br&gt;
- Write Distribution&lt;br&gt;
- Query Isolation&lt;br&gt;
- Reliability&lt;br&gt;
- Index Locality&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://goranzugic.wordpress.com/2014/05/29/selecting-a-mongodb-shard-key/&quot;&gt;Selecting a MongoDB Shard Key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You should carefully amalyze all options before selecting the shard key since it can significantly affect your system performance and it cannot be changed after data is inserted in MongoDB. &lt;/p&gt;

&lt;p&gt;Usually you will not shard all collections but only collections that need data to be distributed over shards to improve read and/or write performance. All un-sharded collections will be held in only one shard that is called primary shard&lt;/p&gt;

&lt;p&gt;MongoDB supports three types of sharding:
- Range-based sharding
- Hash-based sharding
- Tag-aware sharding&lt;/p&gt;

&lt;p&gt;In general, range-based sharding provides better support for range queries that need query isolation while the hash-based sharding supports write operations more efficiently.&lt;/p&gt;

&lt;p&gt;In order to properly select a shard key for your MongoDB sharded cluster, it is important to understand how your application reads and writes data. Actually the main question is&lt;/p&gt;

&lt;p&gt;What is more critical, query isolation, or write scaling, or both?&lt;/p&gt;

&lt;p&gt;In order to select an optimal shard key for query isolation you must take into consideration the following:
 - Analyze what query operations are most performance dependent;
 - Determine which fields are used the most in these operations and include them in the shard key;
 - Make sure that the selected shard key enable even (balanced) distribution of data across shards;
 - A high cardinality field is preferable. Low cardinality fields tend to group documents on a small number of shards what would require frequent rebalancing of the chunks.&lt;/p&gt;

&lt;p&gt;The most common techniques people use to distribute data are:&lt;/p&gt;

&lt;p&gt;Ascending key distribution – The shard key field is usually of Date, Timestamp or Objectld type. This pattern is not definitely good for the write scaling.&lt;/p&gt;

&lt;p&gt;Random distribution – This pattern is achieved by fields that do not have an identifiable pattern in the dataset.  This is a preferable pattern for write scaling since it enables balanced distribution of write operations and data across the shards. However this pattern does not work well for the query  isolation if the critical queries must retrieve large amount of “close” data based on range criteria  in which case the query will be spread across the most of the shards in the cluster.&lt;/p&gt;

&lt;p&gt;Compound Shard Key – Combine more than one field into a shard key in order to come up with optimal shard key  values for high cardinality and balanced distribution of data for an efficient  write scaling and query isolation.&lt;/p&gt;

&lt;p&gt;high  Query isolation / Write scaling - high  A shard key enabling mid-high randomness and relatively even distribution of data.  A compound shard keys are usually good candidates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;on-selecting-a-shard-key-for-mongodb&quot;&gt;&lt;a href=&quot;https://www.mongodb.com/blog/post/on-selecting-a-shard-key-for-mongodb&quot;&gt;On Selecting a Shard Key for MongoDB&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Shard Key Considerations
With that said, there are five criteria for a good shard key. They are:
- Cardinality
- Write Distribution
- Read Distribution
- Read Targeting
- Read Locality&lt;/p&gt;

&lt;p&gt;There are two design patterns that I think work well for shard key selection. The first is using a hashed shard key, based on a field that is usually present in most queries.  The other useful design pattern is a compound shard key, composed of of a low-cardinality (&amp;quot;chunky&amp;quot;) first part, and a high-cardinality second part, often a monotonically increasing one.&lt;/p&gt;

&lt;p&gt;Hashed shard keys can often be a good option: out of the 5 criteria, the only one they don&amp;#39;t provide is Read Locality. If your application doesn&amp;#39;t use range queries, they may be ideal.&lt;/p&gt;

&lt;p&gt;Two important things to note about hashed shard keys: the underlying field that they&amp;#39;re based on must provide enough cardinality, and the underlying field must be present in most queries in order to allow for Read Targeting.&lt;/p&gt;

&lt;p&gt;Compound shard key, composed of of a low-cardinality (&amp;quot;chunky&amp;quot;) first part, and a high-cardinality second part, often a monotonically increasing one.  If there are enough distinct values in the first part (at least twice the number of shards) you&amp;#39;ll get good write and read distribution; the high-cardinality second part gets you good cardinality and read locality.&lt;/p&gt;

&lt;p&gt;For one thing, these five criteria I listed are typically mutually incompatible: it&amp;#39;s very rare to be able to get good write distribution, read distribution, and read locality all with a single shard key.&lt;/p&gt;

&lt;p&gt;the only reasonable way to approach MongoDB shard key selection is the way that you approach any other part of MongoDB schema design: you have to carefully consider the requirements arising from all of the different operations your application will perform&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;how-to-choose-a-shard-key-for-mongodb&quot;&gt;&lt;a href=&quot;http://blog.bugsnag.com/mongo-shard-key&quot;&gt;How to choose a shard key for MongoDB&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Hashed id :
This will distribute reads and writes evenly, and it will ensure that each document has a different shard key so chunks can be fine-grained and small.&lt;/p&gt;

&lt;p&gt;It’s not perfect, because queries for multiple documents will have to hit all shards, but it might be good enough.&lt;/p&gt;

&lt;p&gt;Multi-tenant compound index
If you want to beat the hashed _id scheme, you need to come up with way of grouping related documents close together in the index. At Bugsnag we group the documents by project, because of the way our app works most queries are run in the scope of a project. We can’t just use projectId as a shard key because that leads to jumbo chunks, so we also include the _id to break large projects into multiple chunks.  To avoid this problem in the future, we will likely migrate to an index on {projectId: &amp;#39;hashed&amp;#39;, _id: 1}&lt;/p&gt;

&lt;p&gt;In summary
Choosing a shard key is hard, but there are really only two options. If you can’t find a good grouping key for your application, hash the _id. If you can, then go with that grouping key and add the _id to avoid jumbo chunks. Remember that whichever grouping key you use, it needs to also distribute reads and writes evenly to get the most out of each node in your cluster.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;how-to-choose-a-shard-key-the-card-game-demo&quot;&gt;&lt;a href=&quot;http://www.kchodorow.com/blog/2011/01/04/how-to-choose-a-shard-key-the-card-game/&quot;&gt;How to Choose a Shard Key: The Card Game&lt;/a&gt; - &lt;a href=&quot;http://www.kchodorow.com/shardcarks/strategy.php&quot;&gt;Demo&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Ascending shard keys are equivalent to this strategy: ObjectIds, dates, timestamps, auto-incrementing primary keys.&lt;/p&gt;

&lt;p&gt;Random Sharding keys : MD5 hashes, UUIDs. If you shard on a random key, you lose data locality benefits.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-three-most-important-considerations-in-selecting-a-mongodb-shard-key&quot;&gt;&lt;a href=&quot;https://www.morpheusdata.com/blog/2015-01-26-the-three-most-important-considerations-in-selecting-a-mongodb-shard-key&quot;&gt;The Three Most Important Considerations in Selecting a MongoDB Shard Key&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The efficient operation of your MongoDB database depends on which field in the documents you designate as the shard key. Since you have to select the shard key up front and can&amp;#39;t change it later, you need to give the choice due consideration. &lt;/p&gt;

&lt;p&gt;The MongoDB Manual recommends that your shard keys have a high degree of randomness to ensure the cluster&amp;#39;s write operations are distributed evenly, which is referred to as write scaling.&lt;/p&gt;

&lt;p&gt;Conversely, when a field has a high degree of randomness, it becomes a challenge to target specific shards. By using a shard key that is tied to a single shard, queries run much more efficiently; this is called query isolation.&lt;/p&gt;

&lt;p&gt;When a collection doesn&amp;#39;t have a field suitable to use as a shard key, a compound shard key can be used, or a field can be added to serve as the key.&lt;/p&gt;

&lt;p&gt;Choice of shard key depends on the nature of the collection&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;sharding-and-mongodb-release-3-2-1&quot;&gt;&lt;a href=&quot;https://docs.mongodb.org/master/MongoDB-sharding-guide-master.pdf&quot;&gt;Sharding and MongoDB Release 3.2.1&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The field you choose as your hashed shard key should have a good cardinality, or large number of different values. Hashed keys work well with fields that increase monotonically like ObjectId values or timestamps.&lt;/p&gt;

&lt;p&gt;Shard Keys and Cluster Availability
The most important consideration when choosing a shard key are:
• to ensure that MongoDB will be able to distribute data evenly among shards, and • to scale writes across the cluster, and
• to ensure that mongos can isolate most queries to a specific mongod.&lt;/p&gt;

&lt;p&gt;Theindexontheshardkeycannotbeamultikeyindex.&lt;/p&gt;

&lt;p&gt;3.1.2 Considerations for Selecting Shard Keys&lt;/p&gt;

&lt;p&gt;Choosing the correct shard key can have a great impact on the performance, capability, and functioning of your database and cluster. Appropriate shard key choice depends on the schema of your data and the way that your appli- cations query and write data&lt;/p&gt;

&lt;p&gt;A shard key with high degree of randomness prevents any single shard from becoming a bottleneck and will distribute write operations among the cluster.&lt;/p&gt;

&lt;p&gt;The challenge when selecting a shard key is that there is not always an obvious choice. Often, an existing field in your collection may not be the optimal key. In those situations, computing a special purpose shard key into an additional field or using a compound shard key may help produce one that is more ideal.&lt;/p&gt;

&lt;p&gt;Cardinality in the context of MongoDB, refers to the ability of the system to partition data into chunks&lt;/p&gt;

&lt;p&gt;While “high cardinality,” is necessary for ensuring an even distribution of data, having a high cardinality does not
guarantee sufficient query isolation  or appropriate write scaling .&lt;/p&gt;

&lt;p&gt;Shard Key Selection Strategy&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;mongoose-mongo-orm-for-nodejs&quot;&gt;Mongoose - Mongo ORM for NodeJs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mongoosejs.com/index.html&quot;&gt;mongoose - elegant mongodb object modeling for node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mongoosejs.com/docs/index.html&quot;&gt;mongoose - Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mongoosejs.com/docs/promises.html&quot;&gt;mongoose - Promises&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;enable-mongo-cmd-in-replicate&quot;&gt;Enable Mongo Cmd in Replicate&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# mongo shell
$ rs.slaveOk()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;index&quot;&gt;Index&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/mongodb/indexing-with-mongodb&quot;&gt;Indexing with MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# mongo
$ db.user.ensureIndex( { _id : &quot;hashed&quot; } )
$ sh.shardCollection(&quot;facebook.user&quot;, { &quot;_id&quot;: &quot;hashed&quot; } )
$ db.user.getShardDistribution()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;### Set Sharding chunk size
use config
db.settings.save( { _id:&quot;chunksize&quot;, value: 8 } )

### Set Shard Key &amp;amp; Index Key

mongo --host mongo_router_1:27017 &amp;lt;&amp;lt;EOF
use prod;
sh.enableSharding(&quot;prod&quot;);
db.user.ensureIndex( { slug : 1 } );
sh.shardCollection(&quot;prod.user&quot;, { &quot;_id&quot;: 1 } );
EOF

##  check nscanned
db.user.find({slug: '8PwobE4O'}).explain(&quot;executionStats&quot;)

## Ensure Index 

db.user.getIndexes()
db.user.dropIndexes()

db.user.ensureIndex( { slug : 1 }, { unique: true, backgroud: true })
db.user.ensureIndex( { slug : &quot;hashed&quot;  }, { backgroud: true } )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;query-performance&quot;&gt;Query Performance&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=vftxTniVYrU&quot;&gt;MongoDB Tutorial: Speeding Up Queries with Simple and Compound Indexes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/tutorial/analyze-query-plan/&quot;&gt;Analyze Query Performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>botbotbot</name></author><category term="mongo" /><category term="nosql" /><summary type="html">Mongo

Understand Documents


Thinking in Documents: Part 1
Thinking in Documents: Part 2


Migration


Considerations before moving from RDBMS to MongoDB
SQL to MongoDB Mapping Chart



The first question to ask, then, when moving from a relational database to MongoDB is, ‘How will this data be accessed?’ Other important questions include:

What is the access pattern?
What are you hoping to show to your customers/users?
How are you going to write this data?</summary></entry><entry><title type="html">Dotfile</title><link href="http://dev.im-bot.com//dotfile/" rel="alternate" type="text/html" title="Dotfile" /><published>2016-03-27T00:00:00+00:00</published><updated>2016-03-27T00:00:00+00:00</updated><id>http://dev.im-bot.com//dotfile</id><content type="html" xml:base="http://dev.im-bot.com//dotfile/">&lt;blockquote&gt;
&lt;p&gt;A file begins with . that is hidden file on unix based. Mostly use as configuration file ex. &lt;code&gt;.gitconfig&lt;/code&gt;, &lt;code&gt;.vimrc&lt;/code&gt;, &lt;code&gt;.bashrc&lt;/code&gt;  - &lt;a href=&quot;https://www.quora.com/What-are-dotfiles&quot;&gt;What are dotfiles?&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Keep dotfiles with github like backup yours machine&amp;#39;s setting. Your can move to new machine with same feeling from old one by restore dotfiles backup.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;For &lt;a href=&quot;https://github.com/ibotdotout/dotfiles&quot;&gt;My OSX Dev Developement&lt;/a&gt;, I use&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OSX - &lt;a href=&quot;https://robots.thoughtbot.com/brewfile-a-gemfile-but-for-homebrew&quot;&gt;Brewfile&lt;/a&gt; and &lt;a href=&quot;https://github.com/Homebrew/homebrew-bundle&quot;&gt;Brew Bundle&lt;/a&gt; to backup and restore homebrew dependentcies.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/anishathalye/dotbot/&quot;&gt;dotbot&lt;/a&gt; to link dotfiles.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;vim-plug&lt;/a&gt; - install vim plugins via    &lt;code&gt;.vimrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tmux-plugins/tpm&quot;&gt;tpm&lt;/a&gt; - install tmux plugins via &lt;code&gt;.tmux.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/What-are-dotfiles&quot;&gt;What are dotfiles?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dotfiles.github.io&quot;&gt;Dotfile Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpro/awesome-dotfiles&quot;&gt;Awesome Dotfile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.smalleycreative.com/tutorials/using-git-and-github-to-manage-your-dotfiles/&quot;&gt;USING GIT AND GITHUB TO MANAGE YOUR DOTFILES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mildronize/dotfiles&quot;&gt;mildronize/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>botbotbot</name></author><category term="unix" /><summary type="html">learn about dotfile.</summary></entry><entry><title type="html">Colemak Keyboard Layout</title><link href="http://dev.im-bot.com//colemak/" rel="alternate" type="text/html" title="Colemak Keyboard Layout" /><published>2016-03-26T00:00:00+00:00</published><updated>2016-03-26T00:00:00+00:00</updated><id>http://dev.im-bot.com//colemak</id><content type="html" xml:base="http://dev.im-bot.com//colemak/">&lt;p&gt;Colemak&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fast typing, Least finger movement than QWERY&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://colemak.com&quot;&gt;colemak layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://chetansurpur.com/blog/2012/11/colemak.html&quot;&gt;Ditch QWERTY – Your Hands Need Colemak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://patorjk.com/keyboard-layout-analyzer/#/main&quot;&gt;Analyze Text Input See which layout is best for your input text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.howtogeek.com/189270/alternative-keyboard-layouts-explained-dvorak-colemak-and-whether-you-should-care/&quot;&gt;Alternative Keyboard Layouts Explained: Should You Switch to Dvorak or Colemak?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.workmanlayout.com/blog/#popbooks&quot;&gt;Test Keyboard Layout Using Popular Books&lt;/a&gt; -  Should look at Top/Home/Bottom Row Percentage&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sermoa.wordpress.com/2011/12/22/colemak-is-easy-to-learn/&quot;&gt;Colemak is easy to learn!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://thetypingcat.com/course/colemak&quot;&gt;Learn Colemak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://alexarmstrong.net/2015/01/reassign-capslock-to-backspace/&quot;&gt;Reassign Caps Lock to Backspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.erw.dk/2015/02/27/4-years-with-colemak/&quot;&gt;4 Years with Colemak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ryanheise.com/colemak/&quot;&gt;Learning Colemak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://emileswarts.github.io/2012/08/25/dont-remap-caps-to-be-escape.html&quot;&gt;Don&amp;#39;t remap caps-lock to be escape&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;vim&quot;&gt;Vim&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vim-scripts/colqer&quot;&gt;colqer - Colemak  Only in Vim Insert Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=uubflqamqFk&quot;&gt;Intro to Vim for Colemak users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://forum.colemak.com/viewtopic.php?pid=162#p162&quot;&gt;Colemak + Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jooize/vim-colemak&quot;&gt;vim-colemak&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sermoa.wordpress.com/2011/12/16/colemak-and-vim-but-what-about-hjkl/&quot;&gt;Colemak and vim: “But what about h/j/k/l?”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>botbotbot</name></author><category term="keyboard" /><summary type="html">Colemak


Fast typing, Least finger movement than QWERY



colemak layout
Ditch QWERTY – Your Hands Need Colemak</summary></entry><entry><title type="html">Selectively disable caching for specific RUN commands in Dockerfile</title><link href="http://dev.im-bot.com//docker-select-caching/" rel="alternate" type="text/html" title="Selectively disable caching for specific RUN commands in Dockerfile" /><published>2016-03-24T00:00:00+00:00</published><updated>2016-03-24T00:00:00+00:00</updated><id>http://dev.im-bot.com//docker-select-caching</id><content type="html" xml:base="http://dev.im-bot.com//docker-select-caching/">&lt;p&gt;If you using &lt;code&gt;Dockerfile&lt;/code&gt;, you should know about caching for faster builds.
Sometimes, you need to rebuild without cache. you can run docker &lt;code&gt;build&lt;/code&gt; with
&lt;code&gt;--no-cache&lt;/code&gt; option that will disable all layer cache.&lt;/p&gt;

&lt;p&gt;There is problem when you should use some &lt;code&gt;Dockerfile&lt;/code&gt; commands like &lt;code&gt;ADD&lt;/code&gt; or
&lt;code&gt;COPY&lt;/code&gt; to copy file form host to container.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;You need to copy new file to container then rebuild again without change any
line of &lt;code&gt;Dockerfile&lt;/code&gt; but the new file not was copy to container.
The last build using layer cache that contain old file instead of rebuild with new
file. So this problem can solve easily by using &lt;code&gt;--no-cache&lt;/code&gt; buuild option that
disable all layer cache.&lt;/p&gt;

&lt;p&gt;Sometimes, you need to rebuild only some layer not all layer.
For this case, there is not native solution for Docker but there is some trick
about &lt;code&gt;ARG&lt;/code&gt; command in &lt;code&gt;Dockerfile&lt;/code&gt; and &lt;code&gt;--build-arg&lt;/code&gt; build option that I found
on &lt;a href=&quot;https://github.com/docker/docker/issues/1996#issuecomment-172606763&quot;&gt;New feature request: Selectively disable caching for specific RUN commands
in Dockerfile&lt;/a&gt;
for more detail you should look at &lt;a href=&quot;https://github.com/docker/docker/issues/1996#issuecomment-185872769&quot;&gt;solution description&lt;/a&gt;
and &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#arg&quot;&gt;Dockerfile - ARG&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;add &lt;code&gt;ARG&lt;/code&gt; command to your &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Dockerfile&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# add this and below command will run without cache&lt;/span&gt;
ARG &lt;span class=&quot;nv&quot;&gt;CACHEBUST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;when you need to rebuild with selected cache, run it with &lt;code&gt;--build-arg&lt;/code&gt; option&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker build -t your-image --build-arg &lt;span class=&quot;nv&quot;&gt;CACHEBUST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +%s&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then only layer below &lt;code&gt;ARG&lt;/code&gt; command in &lt;code&gt;Dockerfile&lt;/code&gt; will rebuild.&lt;/p&gt;

&lt;h1 id=&quot;references&quot;&gt;References:&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#build-cache&quot;&gt;Build Cache - Best practices for writing Dockerfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#arg&quot;&gt;Dockerfile - ARG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/docker/docker/issues/1996#issuecomment-172606763&quot;&gt;Temporary Solution - Selectively disable caching for specific RUN commands in Dockerfile&lt;/a&gt; - &lt;a href=&quot;https://github.com/docker/docker/issues/1996#issuecomment-185872769&quot;&gt;An
additional description &lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>botbotbot</name></author><category term="docker" /><summary type="html">If you using Dockerfile, you should know about caching for faster builds.
Sometimes, you need to rebuild without cache. you can run docker build with
--no-cache option that will disable all layer cache.

There is problem when you should use some Dockerfile commands like ADD or
COPY to copy file form host to container.</summary></entry></feed>
